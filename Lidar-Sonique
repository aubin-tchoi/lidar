# Comparaison des valeurs de vent obtenues

import numpy as np

"""
On va projeter la vitesse mesurée par l'anémomètre sur le vecteur radial :
u.er = UsinOcosP + VcosOcosP + WsinP
u(k).er(l) = U[k]T[1][l]T[2][l] + V[k]T[0][k]T[2][l] + W[k]T[3][l]
-> Reste à faire le bon choix de k et l : la discrétisation des deux champs n'est pas la même
On va choisir des lignes de L proches en rho (range), theta (azimuth) et phi (élevation)
"""

# Calcul des coordonnées sphériques d'un point désigné par ses coordonnées cartésiennes

def cart_to_pol(x,y,z,xL,yL,zL):
    rho = np.sqrt((x-xL)**2 + (y-yL)**2 + (z-zL)**2)
    theta = np.arctan((y-yL)/(x-xL))
    phi = np.arcsin((z-zL)/rho)
    return rho, theta, phi

def Projection(L,rho,theta,phi):
    for k in range(len(L[0])):


rho, theta, phi = cart_to_pol(x,y,z,xL,yL,zL)
